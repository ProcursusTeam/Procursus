--- a/SConstruct	2015-09-17 20:46:24.000000000 +0800
+++ b/SConstruct	2022-03-08 18:45:24.489514595 +0800
@@ -152,7 +152,8 @@
                  True),
     )
 
-env = Environment(variables=opts,
+env = Environment(ENV = {'PATH' : os.environ['PATH']},
+                  variables=opts,
                   tools=('default', 'textfile',),
                   CPPPATH=['.', ],
                   )
@@ -163,9 +164,9 @@
               suffix='.def', src_suffix='.h')
   })
 
-match = re.search('SERF_MAJOR_VERSION ([0-9]+).*'
-                  'SERF_MINOR_VERSION ([0-9]+).*'
-                  'SERF_PATCH_VERSION ([0-9]+)',
+match = re.search(b'SERF_MAJOR_VERSION ([0-9]+).*'
+                  b'SERF_MINOR_VERSION ([0-9]+).*'
+                  b'SERF_PATCH_VERSION ([0-9]+)',
                   env.File('serf.h').get_contents(),
                   re.DOTALL)
 MAJOR, MINOR, PATCH = [int(x) for x in match.groups()]
@@ -183,7 +184,7 @@
 
 unknown = opts.UnknownVariables()
 if unknown:
-  print 'Warning: Used unknown variables:', ', '.join(unknown.keys())
+  print('Warning: Used unknown variables:', ', '.join(unknown.keys()))
 
 apr = str(env['APR'])
 apu = str(env['APU'])
@@ -216,7 +217,7 @@
 # from current_version, so don't use the PATCH level to avoid that build and
 # runtime patch levels have to be identical.
 if sys.platform != 'sunos5':
-  env['SHLIBVERSION'] = '%d.%d.%d' % (MAJOR, MINOR, 0)
+  env['SHLIBVERSION'] = '%d.%d.%d' % (MAJOR, MINOR, PATCH)
 
 LIBNAME = 'libserf-%d' % (MAJOR,)
 if sys.platform != 'win32':
@@ -229,7 +230,7 @@
 
 if sys.platform == 'darwin':
 #  linkflags.append('-Wl,-install_name,@executable_path/%s.dylib' % (LIBNAME,))
-  env.Append(LINKFLAGS=['-Wl,-install_name,%s/%s.dylib' % (thisdir, LIBNAME,)])
+  env.Append(LINKFLAGS=['-Wl,-install_name,%s/%s.dylib' % (libdir, LIBNAME,)])
 
 if sys.platform != 'win32':
   def CheckGnuCC(context):
@@ -419,21 +420,6 @@
 install_static = env.Install(libdir, lib_static)
 install_shared = env.InstallVersionedLib(libdir, lib_shared)
 
-if sys.platform == 'darwin':
-  # Change the shared library install name (id) to its final name and location.
-  # Notes:
-  # If --install-sandbox=<path> is specified, install_shared_path will point
-  # to a path in the sandbox. We can't use that path because the sandbox is
-  # only a temporary location. The id should be the final target path.
-  # Also, we shouldn't use the complete version number for id, as that'll
-  # make applications depend on the exact major.minor.patch version of serf.
-
-  install_shared_path = install_shared[0].abspath
-  target_install_shared_path = os.path.join(libdir, '%s.dylib' % LIBNAME)
-  env.AddPostAction(install_shared, ('install_name_tool -id %s %s'
-                                     % (target_install_shared_path,
-                                        install_shared_path)))
-
 env.Alias('install-lib', [install_static, install_shared,
                           ])
 env.Alias('install-inc', env.Install(incdir, HEADER_FILES))
