--- spotifyd/src/utils.rs.orig	2023-02-13 21:51:38.820496203 +0000
+++ spotifyd/src/utils.rs	2023-02-13 21:52:26.191783337 +0000
@@ -1,7 +1,7 @@
 use log::trace;
 use std::env;
 
-#[cfg(any(target_os = "freebsd", target_os = "linux"))]
+#[cfg(any(target_os = "freebsd", target_os = "linux", target_os = "ios"))]
 fn get_shell_ffi() -> Option<String> {
     use libc::{geteuid, getpwuid_r};
     use std::{ffi::CStr, mem, ptr};
--- spotifyd/Cargo.toml.orig	2023-02-13 22:08:14.327023593 +0000
+++ spotifyd/Cargo.toml	2023-02-13 21:58:27.548996151 +0000
@@ -19,7 +19,7 @@
 futures = "0.3.15"
 gethostname = "0.2.0"
 hex = "0.4"
-keyring = { version = "0.10.1", optional = true }
+keyring = { version = "1.2.1", optional = true }
 libc = "0.2.82"
 log = "0.4.6"
 rspotify = { version = "0.11.5", features = ["client-ureq", "ureq-rustls-tls"], default-features = false, optional = true }
--- spotifyd/src/setup.rs.orig	2023-02-13 22:09:16.033374869 +0000
+++ spotifyd/src/setup.rs	2023-02-13 22:07:25.545846734 +0000
@@ -4,8 +4,6 @@
     config,
     main_loop::{self, CredentialsProvider},
 };
-#[cfg(feature = "dbus_keyring")]
-use keyring::Keyring;
 use librespot_connect::discovery::discovery;
 use librespot_core::{
     authentication::Credentials,
@@ -92,7 +90,7 @@
         // spotifyd can run without being signed in too.
         if username.is_some() && config.use_keyring {
             info!("Checking keyring for password");
-            let keyring = Keyring::new("spotifyd", username.as_ref().unwrap());
+            let keyring = keyring::Entry::new("spotifyd", username.as_ref().unwrap());
             let retrieved_password = keyring.get_password();
             password = password.or_else(|| retrieved_password.ok());
         }
