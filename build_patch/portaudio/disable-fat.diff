--- portaudio/configure.in.orig	2023-02-13 20:27:50.873945673 +0000
+++ portaudio/configure.in	2023-02-13 20:28:45.102456239 +0000
@@ -216,65 +216,6 @@
         CFLAGS="$CFLAGS -I\$(top_srcdir)/src/os/unix -Wno-deprecated -Werror"
         LIBS="-framework CoreAudio -framework AudioToolbox -framework AudioUnit -framework CoreFoundation -framework CoreServices"
 
-        if test "x$enable_mac_universal" = "xyes" ; then
-           case `xcodebuild -version | sed -n 's/Xcode \(.*\)/\1/p'` in
-
-           3.0|3.1)
-              dnl In pre-3.2 versions of Xcode, xcodebuild doesn't
-              dnl support -sdk, so we can't use that to look for
-              dnl SDKs.  However, in those versions of Xcode, the
-              dnl SDKs are under /Developer/SDKs, so we can just look
-              dnl there.  Also, we assume they had no SDKs later
-              dnl than 10.5, as 3.2 was the version that came with
-              dnl 10.6, at least if the Wikipedia page for Xcode
-              dnl is to be believed.
-              if [[ -d /Developer/SDKs/MacOSX10.5.sdk ]] ; then
-                 mac_version_min="-mmacosx-version-min=10.3"
-                 mac_sysroot="-isysroot /Developer/SDKs/MacOSX10.5.sdk"
-              else
-                 mac_version_min="-mmacosx-version-min=10.3"
-                 mac_sysroot="-isysroot /Developer/SDKs/MacOSX10.4u.sdk"
-              fi
-              ;;
-
-           *)
-              dnl In 3.2 and later, xcodebuild supports -sdk, and, in
-              dnl 4.3 and later, the SDKs aren't under /Developer/SDKs
-              dnl as there *is* no /Developer, so we use -sdk to check
-              dnl what SDKs are available and to get the full path of
-              dnl the SDKs.
-              if xcrun --sdk macosx10.5 --show-sdk-path >/dev/null 2>&1 ; then
-                 mac_version_min="-mmacosx-version-min=10.5"
-                 mac_sysroot="-isysroot $(xcrun --sdk macosx10.5 --show-sdk-path)"
-              else
-                 mac_version_min="-mmacosx-version-min=10.6"
-                 mac_sysroot="-isysroot $(xcrun --sdk macosx --show-sdk-path)"
-              fi
-           esac
-
-           dnl Pick which architectures to build for based on what
-           dnl the compiler and SDK supports.
-           mac_arches=""
-           for arch in x86_64 arm64
-           do
-              save_CFLAGS="$CFLAGS"
-              CFLAGS="$CFLAGS -arch $arch"
-              AC_COMPILE_IFELSE(
-                 [AC_LANG_SOURCE([$PAMAC_TEST_PROGRAM])],
-                 [
-                    if [[ -z "$mac_arches" ]] ; then
-                       mac_arches="-arch $arch"
-                    else
-                       mac_arches="$mac_arches -arch $arch"
-                    fi
-                 ])
-              CFLAGS="$save_CFLAGS"
-           done
-        else
-           mac_arches=""
-           mac_sysroot=""
-           mac_version=""
-        fi
         SHARED_FLAGS="$LIBS -dynamiclib $mac_arches $mac_sysroot $mac_version_min"
         CFLAGS="-std=c99 $CFLAGS $mac_arches $mac_sysroot $mac_version_min"
         OTHER_OBJS="src/os/unix/pa_unix_hostapis.o src/os/unix/pa_unix_util.o src/hostapi/coreaudio/pa_mac_core.o src/hostapi/coreaudio/pa_mac_core_utilities.o src/hostapi/coreaudio/pa_mac_core_blocking.o src/common/pa_ringbuffer.o"
