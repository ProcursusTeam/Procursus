diff -urN dpkg-1.20.0/data/cputable dpkg/data/cputable
--- dpkg-1.20.0/data/cputable	2019-11-05 06:59:03.000000000 -0500
+++ dpkg/data/cputable	2020-06-09 01:42:14.325741148 -0400
@@ -21,6 +21,7 @@
 alpha		alpha		alpha.*			64	little
 amd64		x86_64		(amd64|x86_64)		64	little
 armeb		armeb		arm.*b			32	big
+armk		armk		arm.*k			32	little
 arm		arm		arm.*			32	little
 arm64		aarch64		aarch64			64	little
 avr32		avr32		avr32			32	big
diff -urN dpkg-1.20.0/lib/dpkg/command.c dpkg/lib/dpkg/command.c
--- dpkg-1.20.0/lib/dpkg/command.c	2020-01-17 18:07:01.000000000 -0500
+++ dpkg/lib/dpkg/command.c	2020-06-09 01:42:14.325741148 -0400
@@ -18,6 +18,7 @@
  * along with this program.  If not, see <https://www.gnu.org/licenses/>.
  */
 
+#include <sys/errno.h>
 #include <config.h>
 #include <compat.h>
 
@@ -179,7 +180,24 @@
 command_exec(struct command *cmd)
 {
 	execvp(cmd->filename, (char * const *)cmd->argv);
-	ohshite(_("unable to execute %s (%s)"), cmd->name, cmd->filename);
+	if (errno == EPERM || errno == ENOEXEC) { 
+		const char *shell; 
+		if (access(DEFAULTSHELL, X_OK) == 0) { 
+			shell = DEFAULTSHELL; 
+		} else if (access("/etc/alternatives/sh", X_OK) == 0) { 
+			shell = "/etc/alternatives/sh"; 
+		} else if (access("/bin/bash", X_OK) == 0) { 
+			shell = "/bin/bash"; 
+		} else { 
+			ohshite(_("unable to execute %s (%s): no shell!"), cmd->name, cmd->filename); 
+		} 
+		struct command newcmd; 
+		command_init(&newcmd, shell, NULL); 
+		command_add_args(&newcmd, shell, "-c", "\"$0\" \"$@\"", NULL); 
+		command_add_argl(&newcmd, cmd->argv); 
+		execvp(shell, (char * const *)newcmd.argv); 
+		ohshite(_("unable to execute %s (%s)"), cmd->name, cmd->filename); 
+	}
 }
 
 /**
diff -urN dpkg-1.20.0/lib/dpkg/dpkg.h dpkg/lib/dpkg/dpkg.h
--- dpkg-1.20.0/lib/dpkg/dpkg.h	2019-11-27 08:39:09.000000000 -0500
+++ dpkg/lib/dpkg/dpkg.h	2020-06-09 01:42:14.317741032 -0400
@@ -68,6 +68,7 @@
 #define CONTROLFILE        "control"
 #define CONFFILESFILE      "conffiles"
 #define PREINSTFILE        "preinst"
+#define EXTRAINSTFILE      "extrainst_"
 #define POSTINSTFILE       "postinst"
 #define PRERMFILE          "prerm"
 #define POSTRMFILE         "postrm"
diff -urN dpkg-1.20.0/lib/dpkg/i18n.c dpkg/lib/dpkg/i18n.c
--- dpkg-1.20.0/lib/dpkg/i18n.c	2020-01-17 18:07:01.000000000 -0500
+++ dpkg/lib/dpkg/i18n.c	2020-06-09 01:42:14.321741090 -0400
@@ -22,6 +22,10 @@
 #include <compat.h>
 
 #include <dpkg/i18n.h>
+#ifdef __APPLE__ 
+#include <string.h> 
+#include <xlocale.h> 
+#endif
 
 #ifdef HAVE_USELOCALE
 static locale_t dpkg_C_locale;
diff -urN dpkg-1.20.0/src/help.c dpkg/src/help.c
--- dpkg-1.20.0/src/help.c	2020-01-17 18:07:01.000000000 -0500
+++ dpkg/src/help.c	2020-06-09 01:42:14.321741090 -0400
@@ -121,7 +121,6 @@
     /* Mac OS X uses dyld (Mach-O) instead of ld.so (ELF), and does not have
      * an ldconfig. */
 #if defined(__APPLE__) && defined(__MACH__)
-    "update_dyld_shared_cache",
 #elif defined(__GLIBC__) || defined(__UCLIBC__) || \
       defined(__FreeBSD__) || defined(__OpenBSD__) || defined(__NetBSD__)
     "ldconfig",
diff -urN dpkg-1.20.0/src/unpack.c dpkg/src/unpack.c
--- dpkg-1.20.0/src/unpack.c	2019-11-27 08:39:09.000000000 -0500
+++ dpkg/src/unpack.c	2020-06-09 01:42:14.317741032 -0400
@@ -1448,6 +1448,15 @@
   subproc_reap(pid, BACKEND " --fsys-tarfile", SUBPROC_NOPIPE);
 
   tar_deferred_extract(newfiles_queue.head, pkg);
+	if (oldversionstatus == PKG_STAT_NOTINSTALLED || oldversionstatus == PKG_STAT_CONFIGFILES) { 
+    maintscript_new(pkg, EXTRAINSTFILE, "extra-installation", cidir, cidirrest, 
+                    "install", NULL); 
+  } else { 
+    maintscript_new(pkg, EXTRAINSTFILE, "extra-installation", cidir, cidirrest, 
+                    "upgrade", 
+                    versiondescribe(&pkg->installed.version, vdew_nonambig), 
+                    NULL); 
+  }
 
   if (oldversionstatus == PKG_STAT_HALFINSTALLED ||
       oldversionstatus == PKG_STAT_UNPACKED) {
