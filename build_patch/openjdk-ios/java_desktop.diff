diff -urN openjdk/make/modules/java.desktop/lib/Awt2dLibraries.gmk openjdk/make/modules/java.desktop/lib/Awt2dLibraries.gmk
--- openjdk/make/modules/java.desktop/lib/Awt2dLibraries.gmk	2020-12-17 10:30:07.000000000 -0500
+++ openjdk/make/modules/java.desktop/lib/Awt2dLibraries.gmk	2020-12-29 23:23:31.000000000 -0500
@@ -81,7 +81,7 @@
 endif
 
 ifeq ($(call isTargetOs, macosx), true)
-  LIBAWT_EXFILES += initIDs.c awt/image/cvutils/img_colors.c
+  #LIBAWT_EXFILES += initIDs.c awt/image/cvutils/img_colors.c
 endif
 
 ifeq ($(call isTargetOs, windows), true)
@@ -157,13 +157,6 @@
     LIBS_unix := -ljvm -ljava $(LIBM), \
     LIBS_linux :=  $(LIBDL), \
     LIBS_aix := $(LIBDL),\
-    LIBS_macosx := -lmlib_image \
-        -framework Cocoa \
-        -framework OpenGL \
-        -framework JavaNativeFoundation \
-        -framework JavaRuntimeSupport \
-        -framework ApplicationServices \
-        -framework AudioToolbox, \
     LIBS_windows := kernel32.lib user32.lib gdi32.lib winspool.lib \
         imm32.lib ole32.lib uuid.lib shell32.lib \
         comdlg32.lib winmm.lib comctl32.lib shlwapi.lib \
@@ -174,15 +167,15 @@
 
 $(BUILD_LIBAWT): $(call FindLib, java.base, java)
 
-ifeq ($(call isTargetOs, macosx), true)
-  $(BUILD_LIBAWT): $(BUILD_LIBMLIB_IMAGE)
-endif
+#ifeq ($(call isTargetOs, macosx), true)
+#  $(BUILD_LIBAWT): $(BUILD_LIBMLIB_IMAGE)
+#endif
 
 TARGETS += $(BUILD_LIBAWT)
 
 ################################################################################
 
-ifeq ($(call isTargetOs, windows macosx), false)
+ifeq ($(call isTargetOs, windows), false)
   ifeq ($(ENABLE_HEADLESS_ONLY), false)
 
     LIBAWT_XAWT_EXTRA_SRC := \
@@ -353,7 +346,7 @@
 ################################################################################
 
 # Mac and Windows only use the native AWT lib, do not build libawt_headless
-ifeq ($(call isTargetOs, windows macosx), false)
+ifeq ($(call isTargetOs, windows), false)
 
   LIBAWT_HEADLESS_EXTRA_SRC := \
       common/font \
@@ -568,12 +561,11 @@
     DISABLED_WARNINGS_clang := deprecated-declarations, \
     LDFLAGS := $(subst -Xlinker -z -Xlinker defs,, \
         $(subst -Wl$(COMMA)-z$(COMMA)defs,,$(LDFLAGS_JDKLIB))) $(LDFLAGS_CXX_JDK) \
-        $(call SET_SHARED_LIBRARY_ORIGIN), \
+        $(call SET_SHARED_LIBRARY_ORIGIN) -Wl$(COMMA)-undefined$(COMMA)dynamic_lookup, \
     LDFLAGS_unix := -L$(INSTALL_LIBRARIES_HERE), \
     LDFLAGS_aix := -Wl$(COMMA)-berok, \
     LIBS := $(BUILD_LIBFONTMANAGER_FONTLIB), \
     LIBS_unix := -lawt -ljava -ljvm $(LIBM) $(LIBCXX), \
-    LIBS_macosx := -lawt_lwawt, \
     LIBS_windows := $(WIN_JAVA_LIB) advapi32.lib user32.lib gdi32.lib \
         $(WIN_AWT_LIB), \
 ))
@@ -584,9 +576,9 @@
   $(BUILD_LIBFONTMANAGER): $(BUILD_LIBHARFBUZZ)
 endif
 
-ifeq ($(call isTargetOs, macosx), true)
-  $(BUILD_LIBFONTMANAGER): $(call FindLib, $(MODULE), awt_lwawt)
-endif
+#ifeq ($(call isTargetOs, macosx), true)
+#  $(BUILD_LIBFONTMANAGER): $(call FindLib, $(MODULE), awt_lwawt)
+#endif
 
 ifeq ($(FREETYPE_TO_USE), bundled)
   $(BUILD_LIBFONTMANAGER): $(BUILD_LIBFREETYPE)
@@ -640,22 +632,22 @@
 
   ifeq ($(call isTargetOs, macosx), true)
     # libjawt on macosx do not use the unix code
-    LIBJAWT_EXCLUDE_SRC_PATTERNS := /unix/
+    LIBJAWT_EXCLUDE_SRC_PATTERNS := /macosx/
   endif
 
-  ifeq ($(call isTargetOs, macosx), true)
-    JAWT_LIBS := -lawt_lwawt
-  else
+ # ifeq ($(call isTargetOs, macosx), true)
+ #   JAWT_LIBS := -lawt_lwawt
+ # else
     JAWT_LIBS := -lawt
     ifeq ($(ENABLE_HEADLESS_ONLY), false)
       JAWT_LIBS += -lawt_xawt
     else
       JAWT_LIBS += -lawt_headless
-      ifeq ($(call isTargetOs, linux), true)
+      ifeq ($(call isTargetOs, linux macosx), true)
         JAWT_CFLAGS += -DHEADLESS
       endif
     endif
-  endif
+ # endif
 
   $(eval $(call SetupJdkLibrary, BUILD_LIBJAWT, \
       NAME := jawt, \
@@ -673,7 +665,7 @@
       LDFLAGS_unix := -L$(INSTALL_LIBRARIES_HERE), \
       LDFLAGS_macosx := -Wl$(COMMA)-rpath$(COMMA)@loader_path, \
       LIBS_unix := $(JAWT_LIBS) $(JDKLIB_LIBS), \
-      LIBS_macosx := -framework Cocoa, \
+      LIBS_macosx := , \
   ))
 
   ifeq ($(ENABLE_HEADLESS_ONLY), false)
@@ -682,9 +674,9 @@
     $(BUILD_LIBJAWT): $(call FindLib, $(MODULE), awt_headless)
   endif
 
-  ifeq ($(call isTargetOs, macosx), true)
-   $(BUILD_LIBJAWT): $(call FindLib, $(MODULE), awt_lwawt)
-  endif
+  #ifeq ($(call isTargetOs, macosx), true)
+  # $(BUILD_LIBJAWT): $(call FindLib, $(MODULE), awt_lwawt)
+  #endif
 
 endif
 
@@ -726,7 +718,7 @@
 
   ifeq ($(call isTargetOs, macosx), true)
     # libsplashscreen on macosx do not use the unix code
-    LIBSPLASHSCREEN_EXCLUDE_SRC_PATTERNS := /unix/
+    LIBSPLASHSCREEN_EXCLUDE_SRC_PATTERNS := /macosx/
   endif
 
   LIBSPLASHSCREEN_CFLAGS += -DSPLASHSCREEN -DPNG_NO_MMX_CODE \
@@ -738,18 +730,18 @@
     endif
   endif
 
-  ifeq ($(call isTargetOs, macosx), true)
-    LIBSPLASHSCREEN_CFLAGS += -DWITH_MACOSX
+  #ifeq ($(call isTargetOs, macosx), true)
+  #  LIBSPLASHSCREEN_CFLAGS += -DWITH_MACOSX
 
-    BUILD_LIBSPLASHSCREEN_java_awt_SplashScreen.c_CFLAGS := -x objective-c -O0
-    BUILD_LIBSPLASHSCREEN_splashscreen_gfx_impl.c_CFLAGS := -x objective-c -O0
-    BUILD_LIBSPLASHSCREEN_splashscreen_gif.c_CFLAGS := -x objective-c -O0
-    BUILD_LIBSPLASHSCREEN_splashscreen_impl.c_CFLAGS := -x objective-c -O0
-    BUILD_LIBSPLASHSCREEN_splashscreen_jpeg.c_CFLAGS := -x objective-c -O0
-    BUILD_LIBSPLASHSCREEN_splashscreen_png.c_CFLAGS := -x objective-c -O0
-    BUILD_LIBSPLASHSCREEN_splashscreen_sys.m_CFLAGS := -O0
+  #  BUILD_LIBSPLASHSCREEN_java_awt_SplashScreen.c_CFLAGS := -x objective-c -O0
+  #  BUILD_LIBSPLASHSCREEN_splashscreen_gfx_impl.c_CFLAGS := -x objective-c -O0
+  #  BUILD_LIBSPLASHSCREEN_splashscreen_gif.c_CFLAGS := -x objective-c -O0
+  #  BUILD_LIBSPLASHSCREEN_splashscreen_impl.c_CFLAGS := -x objective-c -O0
+  #  BUILD_LIBSPLASHSCREEN_splashscreen_jpeg.c_CFLAGS := -x objective-c -O0
+  #  BUILD_LIBSPLASHSCREEN_splashscreen_png.c_CFLAGS := -x objective-c -O0
+  #  BUILD_LIBSPLASHSCREEN_splashscreen_sys.m_CFLAGS := -O0
 
-  else ifeq ($(call isTargetOs, windows), true)
+  ifeq ($(call isTargetOs, windows), true)
     LIBSPLASHSCREEN_CFLAGS += -DWITH_WIN32
   else
     LIBSPLASHSCREEN_CFLAGS += -DWITH_X11 $(X_CFLAGS)
@@ -757,18 +749,18 @@
 
   LIBSPLASHSCREEN_LIBS :=
 
-  ifeq ($(call isTargetOs, macosx), true)
-    LIBSPLASHSCREEN_LIBS += \
-        $(LIBM) -lpthread -liconv -losxapp \
-        -framework ApplicationServices \
-        -framework Foundation \
-        -framework Security \
-        -framework Cocoa \
-        -framework JavaNativeFoundation
-  else ifeq ($(call isTargetOs, windows), true)
+  #ifeq ($(call isTargetOs, macosx), true)
+  #  LIBSPLASHSCREEN_LIBS += \
+  #      $(LIBM) -lpthread -liconv -losxapp \
+  #      -framework ApplicationServices \
+  #      -framework Foundation \
+  #      -framework Security \
+  #      -framework Cocoa \
+  #      -framework JavaNativeFoundation
+  ifeq ($(call isTargetOs, windows), true)
     LIBSPLASHSCREEN_LIBS += kernel32.lib user32.lib gdi32.lib delayimp.lib $(WIN_JAVA_LIB) jvm.lib
   else
-    LIBSPLASHSCREEN_LIBS += $(X_LIBS) -lX11 -lXext $(LIBM) -lpthread -ldl
+    LIBSPLASHSCREEN_LIBS += $(X_LIBS) -lX11 -lXext $(LIBM) -lpthread -liconv -ldl
   endif
 
   LIBSPLASHSCREEN_HEADER_DIRS += \
@@ -804,15 +796,15 @@
 
   TARGETS += $(BUILD_LIBSPLASHSCREEN)
 
-  ifeq ($(call isTargetOs, macosx), true)
-    $(BUILD_LIBSPLASHSCREEN): $(call FindLib, $(MODULE), osxapp)
-  endif
+  #ifeq ($(call isTargetOs, macosx), true)
+  #  $(BUILD_LIBSPLASHSCREEN): $(call FindLib, $(MODULE), osxapp)
+  #endif
 
 endif
 
 ################################################################################
 
-ifeq ($(call isTargetOs, macosx), true)
+ifeq (false, true)
 
   LIBAWT_LWAWT_EXTRA_SRC := \
       $(TOPDIR)/src/$(MODULE)/unix/native/common/awt \
@@ -882,7 +874,7 @@
 
 ################################################################################
 
-ifeq ($(call isTargetOs, macosx), true)
+ifeq (false, true)
 
   $(eval $(call SetupJdkLibrary, BUILD_LIBOSXUI, \
       NAME := osxui, \
diff -urN openjdk/make/modules/java.desktop/gensrc/GensrcIcons.gmk.orig openjdk/make/modules/java.desktop/gensrc/GensrcIcons.gmk      
--- openjdk/make/modules/java.desktop/gensrc/GensrcIcons.gmk	2020-12-29 18:22:52.000000000 -0500
+++ openjdk/make/modules/java.desktop/gensrc/GensrcIcons.gmk	2020-12-29 18:22:21.000000000 -0500
@@ -106,7 +106,7 @@
 
 ################################################################################
 
-ifeq ($(call isTargetOs, macosx), true)
+ifeq (false, true)
 
   GENSRC_OSX_ICONS_DST := $(SUPPORT_OUTPUTDIR)/headers/java.desktop
   GENSRC_OSX_ICONS := $(GENSRC_OSX_ICONS_DST)/AWTIconData.h
diff -urN  openjdk/make/modules/java.desktop/Lib.gmk openjdk/make/modules/java.desktop/Lib.gmk
--- openjdk/make/modules/java.desktop/Lib.gmk	2020-12-17 10:30:07.000000000 -0500
+++ openjdk/make/modules/java.desktop/Lib.gmk	2020-12-29 22:58:33.000000000 -0500
@@ -68,21 +68,21 @@
       LIBS_unix := -ljava -ljvm, \
       LIBS_linux := $(ALSA_LIBS), \
       LIBS_macosx := -framework CoreAudio -framework CoreFoundation \
-          -framework CoreServices -framework AudioUnit \
+          -framework CoreServices \
           -framework CoreMIDI -framework AudioToolbox $(LIBCXX), \
       LIBS_windows := $(WIN_JAVA_LIB) advapi32.lib dsound.lib winmm.lib user32.lib ole32.lib, \
   ))
 
   $(BUILD_LIBJSOUND): $(call FindLib, java.base, java)
 
-  TARGETS += $(BUILD_LIBJSOUND)
+  #TARGETS += $(BUILD_LIBJSOUND)
 
 endif
 
 ################################################################################
 # Create the macosx specific osxapp and osx libraries
 
-ifeq ($(call isTargetOs, macosx), true)
+ifeq (false, true)
 
   $(eval $(call SetupJdkLibrary, BUILD_LIBOSXAPP, \
       NAME := osxapp, \
diff -urN openjdk/make/modules/java.desktop/Gensrc.gmk.orig openjdk/make/modules/java.desktop/Gensrc.gmk 
--- openjdk/make/modules/java.desktop/Gensrc.gmk.orig	2020-12-29 18:55:18.000000000 -0500
+++ openjdk/make/modules/java.desktop/Gensrc.gmk	2020-12-29 18:55:35.000000000 -0500
@@ -32,7 +32,7 @@
   include gensrc/GensrcIcons.gmk
 endif
 
-ifeq ($(call isTargetOs, linux aix), true)
+ifeq ($(call isTargetOs, macosx linux aix), true)
   include gensrc/GensrcX11Wrappers.gmk
 endif
 
@@ -52,7 +52,7 @@
     $(TOPDIR)/src/java.desktop/share/classes/sun/print/resources \
     #
 
-ifeq ($(call isTargetOs, macosx), true)
+ifeq (false, true)
   PROP_SRC_DIRS += \
       $(TOPDIR)/src/java.desktop/macosx/classes/com/apple/laf/resources \
       $(TOPDIR)/src/java.desktop/macosx/classes/sun/awt/resources \
