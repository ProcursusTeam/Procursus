From acc877bd3498887f9a2c6e5ca81c04a5c299514d Mon Sep 17 00:00:00 2001
From: Razvan Deaconescu <razvan.deaconescu@cs.pub.ro>
Date: Fri, 24 Nov 2017 17:59:56 +0200
Subject: [PATCH] Add support for OpenSSL 1.1.0 in filevault

---
 dmg/filevault.c          | 34 +++++++++++++++++++++++++---------
 includes/dmg/filevault.h |  2 +-
 2 files changed, 26 insertions(+), 10 deletions(-)

diff --git a/dmg/filevault.c b/dmg/filevault.c
index 3bda9a0..87aad2f 100644
--- a/dmg/filevault.c
+++ b/dmg/filevault.c
@@ -51,9 +51,9 @@ static void writeChunk(FileVaultInfo* info) {
 	myChunk = info->curChunk;
 
 	FLIPENDIAN(myChunk);
-	HMAC_Init_ex(&(info->hmacCTX), NULL, 0, NULL, NULL);
-	HMAC_Update(&(info->hmacCTX), (unsigned char *) &myChunk, sizeof(uint32_t));
-	HMAC_Final(&(info->hmacCTX), msgDigest, &msgDigestLen);
+	HMAC_Init_ex(info->hmacCTX, NULL, 0, NULL, NULL);
+	HMAC_Update(info->hmacCTX, (unsigned char *) &myChunk, sizeof(uint32_t));
+	HMAC_Final(info->hmacCTX, msgDigest, &msgDigestLen);
 
 	AES_cbc_encrypt(info->chunk, buffer, info->blockSize, &(info->aesEncKey), msgDigest, AES_ENCRYPT);
 
@@ -85,9 +85,9 @@ static void cacheChunk(FileVaultInfo* info, uint32_t chunk) {
 	info->curChunk = chunk;
 
 	FLIPENDIAN(chunk);
-	HMAC_Init_ex(&(info->hmacCTX), NULL, 0, NULL, NULL);
-	HMAC_Update(&(info->hmacCTX), (unsigned char *) &chunk, sizeof(uint32_t));
-	HMAC_Final(&(info->hmacCTX), msgDigest, &msgDigestLen);
+	HMAC_Init_ex(info->hmacCTX, NULL, 0, NULL, NULL);
+	HMAC_Update(info->hmacCTX, (unsigned char *) &chunk, sizeof(uint32_t));
+	HMAC_Final(info->hmacCTX, msgDigest, &msgDigestLen);
 
 	AES_cbc_encrypt(buffer, info->chunk, info->blockSize, &(info->aesKey), msgDigest, AES_DECRYPT);
 }
@@ -177,7 +177,12 @@ void fvClose(AbstractFile* file) {
 		cacheChunk(info, 0);
 	}
 
-	HMAC_CTX_cleanup(&(info->hmacCTX));
+#if OPENSSL_VERSION_NUMBER >= 0x10100000L
+	HMAC_CTX_free(info->hmacCTX);
+#else
+	HMAC_CTX_cleanup(info->hmacCTX);
+	free(info->hmacCTX);
+#endif
 
 	if(info->headerDirty) {
 		if(info->version == 2) {
@@ -234,8 +239,19 @@ AbstractFile* createAbstractFileFromFileVault(AbstractFile* file, const char* ke
 		hmacKey[i] = curByte;
 	}
 
-	HMAC_CTX_init(&(info->hmacCTX));
-	HMAC_Init_ex(&(info->hmacCTX), hmacKey, sizeof(hmacKey), EVP_sha1(), NULL);
+
+#if OPENSSL_VERSION_NUMBER >= 0x10100000L
+	info->hmacCTX = HMAC_CTX_new();
+	HMAC_CTX_reset(info->hmacCTX);
+#else
+	info->hmacCTX = malloc(sizeof(*info->hmacCTX));
+	if (!info->hmacCTX) {
+		fprintf(stderr, "Out of memory: HMAC CTX!\n");
+		exit(1);
+	}
+	HMAC_CTX_init(info->hmacCTX);
+#endif
+	HMAC_Init_ex(info->hmacCTX, hmacKey, sizeof(hmacKey), EVP_sha1(), NULL);
 	AES_set_decrypt_key(aesKey, FILEVAULT_CIPHER_KEY_LENGTH * 8, &(info->aesKey));
 	AES_set_encrypt_key(aesKey, FILEVAULT_CIPHER_KEY_LENGTH * 8, &(info->aesEncKey));
 
diff --git a/includes/dmg/filevault.h b/includes/dmg/filevault.h
index 42cd0f4..0d04f7c 100644
--- a/includes/dmg/filevault.h
+++ b/includes/dmg/filevault.h
@@ -79,7 +79,7 @@ typedef struct FileVaultInfo {
 
 	AbstractFile*	file;
 
-	HMAC_CTX	hmacCTX;
+	HMAC_CTX	*hmacCTX;
 	AES_KEY		aesKey;
 	AES_KEY		aesEncKey;
 
diff --git a/ipsw-patch/validate.c b/ipsw-patch/validate.c
index c720e85..ec3158b 100644
--- a/ipsw-patch/validate.c
+++ b/ipsw-patch/validate.c
@@ -290,12 +290,12 @@ cryptoMagic(X509 *x0, X509 *x1, X509 *x2,
 	int rv = 0;
 	EVP_PKEY *pk = X509_get_pubkey(x2);
 	if (pk) {
-		if (pk->type == EVP_PKEY_RSA) {
+		if (EVP_PKEY_id(pk) == EVP_PKEY_RSA) {
 			RSA *rsa = EVP_PKEY_get1_RSA(pk);
 			if (rsa) {
 				X509_STORE *store = X509_STORE_new();
 				if (store) {
-					X509_STORE_CTX ctx;
+					X509_STORE_CTX *ctx = X509_STORE_CTX_new();
 					X509_STORE_add_cert(store, x0);
 					X509_STORE_add_cert(store, x1);
 					if (X509_STORE_CTX_init(&ctx, store, x2, 0) == 1) {
