diff --git a/clang/lib/Driver/ToolChains/Darwin.cpp b/clang/lib/Driver/ToolChains/Darwin.cpp
index febde361a429..b6944316d63c 100644
--- a/clang/lib/Driver/ToolChains/Darwin.cpp
+++ b/clang/lib/Driver/ToolChains/Darwin.cpp
@@ -27,6 +27,7 @@
 #include "llvm/Support/Threading.h"
 #include "llvm/Support/VirtualFileSystem.h"
 #include <cstdlib> // ::getenv
+#include <TargetConditionals.h>
 
 using namespace clang::driver;
 using namespace clang::driver::tools;
@@ -1765,11 +1763,13 @@

   StringRef MachOArchName = Toolchain.getMachOArchName(Args);
   if (MachOArchName == "arm64" || MachOArchName == "arm64e") {
-#if __arm64__
+#if (__arm64__) && (TARGET_OS_OSX)
     // A clang running on an Apple Silicon mac defaults
     // to building for mac when building for arm64 rather than
     // defaulting to iOS.
     OSTy = llvm::Triple::MacOSX;
+#elif (__arm64__) && (TARGET_OS_TVOS)
+    OSTy = llvm::Triple::TvOS;
 #else
     OSTy = llvm::Triple::IOS;
 #endif
@@ -2168,7 +2171,7 @@ void DarwinClang::AddClangSystemIncludeArgs(const llvm::opt::ArgList &DriverArgs
     CIncludeDirs.split(dirs, ":");
     for (llvm::StringRef dir : dirs) {
       llvm::StringRef Prefix =
-          llvm::sys::path::is_absolute(dir) ? "" : llvm::StringRef(Sysroot);
+          DriverArgs.hasArg(options::OPT_isysroot) ? llvm::StringRef(Sysroot) : "";
       addExternCSystemInclude(DriverArgs, CC1Args, Prefix + dir);
     }
   } else {
