diff -urN jemalloc-5.3.0/VERSION jemalloc/VERSION
--- jemalloc-5.3.0/VERSION	2022-05-06 18:29:30.000000000 +0000
+++ jemalloc/VERSION	1970-01-01 00:00:00.000000000 +0000
@@ -1 +0,0 @@
-5.3.0-0-g54eaed1d8b56b1aa528be3bdd1877e59c56fa90c
diff -urN jemalloc-5.3.0/VERSION.txt jemalloc/VERSION.txt
--- jemalloc-5.3.0/VERSION.txt	1970-01-01 00:00:00.000000000 +0000
+++ jemalloc/VERSION.txt	2022-05-06 18:29:30.000000000 +0000
@@ -0,0 +1 @@
+5.3.0-0-g54eaed1d8b56b1aa528be3bdd1877e59c56fa90c
diff -urN jemalloc-5.3.0/configure.ac jemalloc/configure.ac
--- jemalloc-5.3.0/configure.ac	2022-05-06 18:29:14.000000000 +0000
+++ jemalloc/configure.ac	2023-02-21 00:54:15.115057911 +0000
@@ -580,15 +580,15 @@
   [
     echo "${with_version}" | grep ['^[0-9]\+\.[0-9]\+\.[0-9]\+-[0-9]\+-g[0-9a-f]\+$'] 2>&1 1>/dev/null
     if test $? -eq 0 ; then
-      echo "$with_version" > "${objroot}VERSION"
+      echo "$with_version" > "${objroot}VERSION.txt"
     else
       echo "${with_version}" | grep ['^VERSION$'] 2>&1 1>/dev/null
       if test $? -ne 0 ; then
-        AC_MSG_ERROR([${with_version} does not match <major>.<minor>.<bugfix>-<nrev>-g<gid> or VERSION])
+        AC_MSG_ERROR([${with_version} does not match <major>.<minor>.<bugfix>-<nrev>-g<gid> or VERSION.txt])
       fi
     fi
   ], [
-    dnl Set VERSION if source directory is inside a git repository.
+    dnl Set VERSION.txt if source directory is inside a git repository.
     if test "x`test ! \"${srcroot}\" && cd \"${srcroot}\"; git rev-parse --is-inside-work-tree 2>/dev/null`" = "xtrue" ; then
       dnl Pattern globs aren't powerful enough to match both single- and
       dnl double-digit version numbers, so iterate over patterns to support up
@@ -600,7 +600,7 @@
                      '[0-9][0-9].[0-9][0-9].[0-9][0-9]']; do
         (test ! "${srcroot}" && cd "${srcroot}"; git describe --long --abbrev=40 --match="${pattern}") > "${objroot}VERSION.tmp" 2>/dev/null
         if test $? -eq 0 ; then
-          mv "${objroot}VERSION.tmp" "${objroot}VERSION"
+          mv "${objroot}VERSION.tmp" "${objroot}VERSION.txt"
           break
         fi
       done
@@ -608,16 +608,16 @@
     rm -f "${objroot}VERSION.tmp"
   ])
 
-if test ! -e "${objroot}VERSION" ; then
-  if test ! -e "${srcroot}VERSION" ; then
+if test ! -e "${objroot}VERSION.txt" ; then
+  if test ! -e "${srcroot}VERSION.txt" ; then
     AC_MSG_RESULT(
-      [Missing VERSION file, and unable to generate it; creating bogus VERSION])
-    echo "0.0.0-0-g000000missing_version_try_git_fetch_tags" > "${objroot}VERSION"
+      [Missing VERSION.txt file, and unable to generate it; creating bogus VERSION.txt])
+    echo "0.0.0-0-g000000missing_version_try_git_fetch_tags" > "${objroot}VERSION.txt"
   else
-    cp ${srcroot}VERSION ${objroot}VERSION
+    cp ${srcroot}VERSION.txt ${objroot}VERSION.txt
   fi
 fi
-jemalloc_version=`cat "${objroot}VERSION"`
+jemalloc_version=`cat "${objroot}VERSION.txt"`
 jemalloc_version_major=`echo ${jemalloc_version} | tr ".g-" " " | awk '{print [$]1}'`
 jemalloc_version_minor=`echo ${jemalloc_version} | tr ".g-" " " | awk '{print [$]2}'`
 jemalloc_version_bugfix=`echo ${jemalloc_version} | tr ".g-" " " | awk '{print [$]3}'`
