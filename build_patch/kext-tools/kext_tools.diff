diff --git a/kext_tools_util.c b/kext_tools_util.c
index d2f99ed..65a14d6 100644
--- a/kext_tools_util.c
+++ b/kext_tools_util.c
@@ -22,7 +22,7 @@
  */
 
 #include <TargetConditionals.h>
-#if !(TARGET_OS_IPHONE && !TARGET_OS_SIMULATOR)
+#ifndef TARGET_OS_EMBEDDED
     #include <bless.h>
     #include "bootcaches.h"
 #endif  // !(TARGET_OS_IPHONE && !TARGET_OS_SIMULATOR)
@@ -38,7 +38,7 @@
 #include <sys/resource.h>
 #include <IOKit/kext/OSKext.h>
 #include <IOKit/kext/OSKextPrivate.h>
-#include <sandbox/rootless.h>
+#include <os/trace_base.h>
 #include <os/log_private.h>
 
 #include <sys/types.h>
diff --git a/kextload_main.c b/kextload_main.c
index 5f949b9..73787e2 100644
--- a/kextload_main.c
+++ b/kextload_main.c
@@ -40,9 +40,9 @@ static Boolean    sKextdActive = FALSE;
 /*******************************************************************************
 * Global variables.
 *******************************************************************************/
-
+#ifndef TARGET_OS_EMBEDDED
 extern void shimKextloadArgsToKMUtilAndRun(KextloadArgs *);
-
+#endif
 ExitStatus
 main(int argc, char * const * argv)
 {
@@ -125,7 +125,9 @@ main(int argc, char * const * argv)
         RANGE_ALL(toolArgs.dependencyURLs));
 
     if (doShimToKernelManagement) {
+#ifndef TARGET_OS_EMBEDDED
         shimKextloadArgsToKMUtilAndRun(&toolArgs);
+#endif
         exit(EX_OSERR); // shouldn't get here!
     } else if (sKextdActive) {
         result = loadKextsViaKextd(&toolArgs);
@@ -388,7 +390,7 @@ finish:
 
     return result;
 }
-
+#ifndef TARGET_OS_EMBEDDED
 /*******************************************************************************
 *******************************************************************************/
 ExitStatus loadKextsViaKernelManagement(KextloadArgs * toolArgs)
@@ -399,6 +401,7 @@ ExitStatus loadKextsViaKernelManagement(KextloadArgs * toolArgs)
 
 /*******************************************************************************
 *******************************************************************************/
+
 ExitStatus loadKextsViaKextd(KextloadArgs * toolArgs)
 {
     ExitStatus result     = EX_OK;
@@ -479,7 +482,7 @@ ExitStatus loadKextsViaKextd(KextloadArgs * toolArgs)
 
     return result;
 }
-
+#endif
 /*******************************************************************************
 *******************************************************************************/
 ExitStatus loadKextsIntoKernel(KextloadArgs * toolArgs)
diff --git a/kextstat_main.c b/kextstat_main.c
index b524573..877fc2c 100644
--- a/kextstat_main.c
+++ b/kextstat_main.c
@@ -47,7 +47,7 @@ void printPList_new(FILE * stream, CFTypeRef aPlist);
 static bool
 shim_kextstat(void)
 {
-#if TARGET_OS_BRIDGE
+#ifdef TARGET_OS_EMBEDDED
     return false;
 #else
     char *legacy = getenv("KEXTSTAT_LEGACY_MODE");
diff --git a/kextunload_main.c b/kextunload_main.c
index 8a696f8..fd99ab6 100644
--- a/kextunload_main.c
+++ b/kextunload_main.c
@@ -31,9 +31,9 @@
 #include "KernelManagementShims/Shims.h"
 
 const char * progname = "(unknown)";
-
+#ifndef TARGET_OS_EMBEDDED
 extern void shimKextunloadArgsToKMUtilAndRun(KextunloadArgs *);
-
+#endif
 /*******************************************************************************
 *******************************************************************************/
 int main(int argc, char * const * argv)
@@ -67,13 +67,13 @@ int main(int argc, char * const * argv)
     if (result != EX_OK) {
         goto finish;
     }
-
+#ifndef TARGET_OS_EMBEDDED
     // Determine now if we will be shimming over to KernelManagement,
     if (disableKextTools() && isKernelManagementLinked()) {
         shimKextunloadArgsToKMUtilAndRun(&toolArgs);
         exit(EX_OSERR); // shouldn't get here!
     }
-
+#endif
    /* If given URLs, create OSKext objects for them so we can get
     * bundle identifiers (that's what IOCatalogueTerminate() expects).
     * If we failed to open one, keep going on but save the not-found
diff --git a/mkext.c b/mkext.c
index 90301e2..70530b8 100644
--- a/mkext.c
+++ b/mkext.c
@@ -25,7 +25,6 @@
 #include <libsa/mkext.h>
 #include <libsa/stdlib.h>
 #else
-#include <Kernel/libsa/mkext.h>
 #include <stdlib.h>
 #endif KERNEL
 
@@ -56,7 +55,7 @@ adler32(u_int8_t *buffer, int32_t length)
 
     return result;
 }
-
+#define local_adler32 adler32
 /**************************************************************
  LZSS.C -- A Data Compression Program
 ***************************************************************
diff --git a/mkext1_file.c b/mkext1_file.c
index 763bbf2..03eda9d 100644
--- a/mkext1_file.c
+++ b/mkext1_file.c
@@ -44,8 +44,8 @@
 
 #include "kext_tools_util.h"
 #include "compression.h"
-
-
+u_int32_t adler32(u_int8_t *buffer, int32_t length);
+#define local_adler32 adler32
 /*******************************************************************************
 *******************************************************************************/
 typedef struct {
diff --git a/mkextunpack_main.c b/mkextunpack_main.c
index 59b848b..eaa53cf 100644
--- a/mkextunpack_main.c
+++ b/mkextunpack_main.c
@@ -43,8 +43,8 @@
 static const char * progname = "mkextunpack";
 static Boolean gVerbose = false;
 
-u_int32_t local_adler32(u_int8_t *buffer, int32_t length);
-
+u_int32_t adler32(u_int8_t *buffer, int32_t length);
+#define local_adler32 adler32
 Boolean getMkextDataForArch(
     u_int8_t         * fileData,
     size_t             fileSize,
@@ -789,15 +789,16 @@ CFDictionaryRef extractEntriesFromMkext1(
             continue;
         }
 
-        CFErrorRef  error;
+        CFErrorRef  cferror;
+        bool error = false;
         kextPlist = CFPropertyListCreateWithData(kCFAllocatorDefault,
                                                  kextPlistDataObject,
                                                  kCFPropertyListImmutable,
                                                  NULL,
-                                                 &error);
+                                                 &cferror);
         if (!kextPlist) {
-            errorString = CFErrorCopyDescription(error);
-            CFRelease(error);
+            errorString = CFErrorCopyDescription(cferror);
+            CFRelease(cferror);
             if (errorString) {
                 CFIndex bufsize = CFStringGetMaximumSizeForEncoding(
                 CFStringGetLength(errorString), kCFStringEncodingUTF8);
diff --git a/signposts.h b/signposts.h
index c149db2..0584556 100644
--- a/signposts.h
+++ b/signposts.h
@@ -8,7 +8,6 @@
 
 #include <os/log.h>
 #include <os/signpost.h>
-#include <os/signpost_private.h>
 
 // shared events
 #define SIGNPOST_EVENT_BOOTCACHE_UPDATE_REASON  "BootcacheUpdateReason"
